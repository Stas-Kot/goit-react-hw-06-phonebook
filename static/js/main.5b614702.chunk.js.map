{"version":3,"sources":["redux/phonebook-types.js","components/PhonebookForm/PhonebookForm.styles.jsx","components/PhonebookForm/PhonebookForm.jsx","redux/phonebook-actions.js","components/ContactListItem/ContactListItem.styles.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/SearchContact/SearchContact.styles.jsx","components/SearchContact/SearchContact.jsx","App.js","redux/phonebook-reducer.js","redux/store.js","index.js"],"names":["Form","BtnAddContact","Input","PhonebookForm","state","name","number","handleSetUserInfo","e","target","value","setState","handleAddContact","preventDefault","props","handleSubmit","reset","this","autocomplete","onSubmit","onChange","type","pattern","title","required","Component","connect","dispatch","contact","types","payload","id","uuidv4","contactsActions","ContactItem","DeleteBtn","ContactListItem","deleteContact","onClick","getFiltredContacts","contacts","filter","normalizedFilter","toLowerCase","trim","includes","items","handleDelete","map","SearchTitle","inputChange","App","combineReducers","find","savedContact","alert","rootReducer","contactsReducer","store","createStore","composeWithDevTools","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b614702.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  FILTER: 'contacts/filter',\r\n};\r\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  width: 350px;\n  border: 2px solid black;\n  padding: 30px 15px;\n\n  & label {\n    font-weight: 500;\n  }\n  & p {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const BtnAddContact = styled.button`\n  display: block;\n  border-radius: 8px;\n  background-color: #fff;\n  color: black;\n  font-weight: 500;\n  padding: 5px 10px;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-color: transparent;\n  border: 1px solid grey;\n  cursor: pointer;\n  &:hover {\n    background-color: #6ea2de;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 30px;\n  &:focus {\n    border: 2px solid #6ea2de;\n    box-shadow: 0px 0px 10px #6ea2de;\n    outline: none;\n  }\n`;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/phonebook-actions';\nimport { Form, BtnAddContact, Input } from './PhonebookForm.styles';\n\nclass PhonebookForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSetUserInfo = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleAddContact = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form autocomplete=\"off\" onSubmit={this.handleAddContact}>\n        <label>\n          <p>Name</p>\n          <Input\n            onChange={this.handleSetUserInfo}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            autocomplete=\"off\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          <p>Number</p>\n          <Input\n            onChange={this.handleSetUserInfo}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            autocomplete=\"off\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleSubmit: contact => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(PhonebookForm);\n","import { v4 as uuidv4 } from 'uuid';\r\nimport types from './phonebook-types';\r\n\r\nexport const addContact = ({ name, number }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nexport const setFilter = value => ({\r\n  type: types.FILTER,\r\n  payload: value,\r\n});\r\n","import styled from '@emotion/styled/macro';\n\nexport const ContactItem = styled.li`\n  width: 400px;\n  font-size: 20px;\n  font-weight: 500;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 30px;\n  margin-right: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem, DeleteBtn } from './ContactListItem.styles';\n\nexport default function ContactListItem({ name, number, deleteContact }) {\n  return (\n    <ContactItem>\n      {name}: {number}\n      <DeleteBtn type=\"button\" onClick={deleteContact}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n}\n\nContactListItem.propTypes = {\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/phonebook-actions';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => handleDelete(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  handleDelete: PropTypes.func,\n};\n\nconst getFiltredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFiltredContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from '@emotion/styled/macro';\n\nexport const SearchTitle = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook-actions';\nimport { SearchTitle } from './SearchContact.styles';\n\nconst SearchContact = ({ value, inputChange }) => {\n  return (\n    <label>\n      <SearchTitle>Find contacts by name</SearchTitle>\n      <input type=\"text\" value={value} onChange={inputChange} />\n    </label>\n  );\n};\nSearchContact.propTypes = {\n  value: PropTypes.string,\n  inputChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  inputChange: e => dispatch(actions.setFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContact);\n","import { Component } from 'react';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchContact from 'components/SearchContact/SearchContact';\n\nclass App extends Component {\n  // componentDidMount() {\n  //   const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState !== this.state) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <PhonebookForm />\n\n        <h2>Contacts</h2>\n        <SearchContact />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\n// const App = () => {\n//   return (\n//     <div>\n//       <h1>Phonebook</h1>\n//       <PhonebookForm />\n\n//       <h2>Contacts</h2>\n//       <SearchContact  />\n//       <ContactList  />\n//     </div>\n//   );\n// }\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport types from './phonebook-types';\r\n\r\nconst itemsReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return state.find(savedContact => savedContact.name === payload.name)\r\n        ? (alert(`${payload.name} is already in contacts`), [...state])\r\n        : [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './phonebook-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}